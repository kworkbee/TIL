import{_ as a,r as t,o as e,c as o,b as n,d as p,a as c,e as i}from"./app.afe75d95.js";var u="/TIL/assets/assertions.28f271da.png",l="/TIL/assets/group-assertions.51edbbd8.png",r="/TIL/assets/group-assertions-2.aab132d9.png",d="/TIL/assets/exception-assertions.494c660e.png";const k={},v=c(`<h1 id="junit5-assertions-assumptions" tabindex="-1"><a class="header-anchor" href="#junit5-assertions-assumptions" aria-hidden="true">#</a> JUnit5 Assertions &amp; Assumptions</h1><hr><h2 id="assertions" tabindex="-1"><a class="header-anchor" href="#assertions" aria-hidden="true">#</a> Assertions</h2><blockquote><p>\uB2E8\uC815\uBB38, <strong>\uC131\uACF5\uD558\uC9C0 \uC54A\uC744 \uB54C \uC2E4\uD328 \uCC98\uB9AC\uD558\uAE30 \uC704\uD574 \uC0AC\uC6A9</strong></p></blockquote><ul><li><code>JUnit5</code>\uC5D0\uC11C\uB294 <code>JUnit4</code>\uC5D0\uC11C \uC0AC\uC6A9\uD558\uC9C0 \uBABB\uD55C <code>Java 8\uC758 \uB78C\uB2E4 \uD45C\uD604\uC2DD</code> \uC0AC\uC6A9\uC774 \uAC00\uB2A5\uD568\uC5D0 \uB530\uB77C, \uD14C\uC2A4\uD2B8 \uCF54\uB4DC\uB97C \uBCF4\uB2E4 <strong>Functional</strong>\uD558\uAC8C \uC791\uC131\uD560 \uC218 \uC788\uB2E4.</li></ul><p>Using <code>org.junit.jupiter.api.Assertions</code></p><h3 id="message" tabindex="-1"><a class="header-anchor" href="#message" aria-hidden="true">#</a> Message</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
Calculator -&gt; String expression\uC744 \uBC1B\uC544 expression result \uCD9C\uB825
\uC774 \uB54C, \uC0AC\uCE59\uC5F0\uC0B0\uC758 \uC6B0\uC120\uC21C\uC704\uB97C \uC801\uC6A9\uD558\uC9C0 \uC54A\uACE0, \uC785\uB825\uBC1B\uB294 operand\uB97C \uC21C\uCC28\uC801\uC73C\uB85C \uC5F0\uC0B0\uD568
*/</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">assertions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token string">&quot;2 + 3 * 4 / 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assertTrue</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Assertion messages can be lazily evaluated -- to avoid constructing complex messages unnecessarily.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+u+`" alt="Assertions Test"></p><ul><li>assertion\uC5D0 \uB300\uD55C \uBA54\uC2DC\uC9C0\uB97C \uBD99\uC77C \uC218 \uC788\uB2E4. \uC2E4\uD328\uD558\uBA74 \uC9C0\uC815\uD55C \uBA54\uC2DC\uC9C0\uB97C \uCD9C\uB825\uD560 \uC218 \uC788\uB2E4.</li></ul><h3 id="group" tabindex="-1"><a class="header-anchor" href="#group" aria-hidden="true">#</a> Group</h3><ul><li>JUnit5\uC5D0\uC11C \uCD94\uAC00\uB41C \uAC83\uC73C\uB85C, <strong>\uB3D9\uC2DC\uC5D0 Assertion \uAD6C\uBB38\uC744 \uC2E4\uD589\uC2DC\uD0AC \uC218 \uC788\uB294 \uADF8\uB8F9</strong>\uC744 \uB9CC\uB4E4 \uC218 \uC788\uB2E4.</li><li>assertion \uBA54\uC11C\uB4DC\uC640 \uB78C\uB2E4\uC2DD\uC758 \uC870\uD569\uC73C\uB85C <strong>\uBCD1\uD589 \uC2E4\uD589</strong>\uC744 \uAD6C\uD604\uD560 \uC218 \uC788\uB2E4.</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">groupAssertions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assertAll</span><span class="token punctuation">(</span><span class="token string">&quot;CalcTest&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token string">&quot;2 + 3 * 4 / 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token string">&quot;2 + 3 * 4 - 20&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+l+'" alt="Group Assertions Test"></p><ul><li>\uB450 \uAD6C\uBB38\uC774 \uBAA8\uB450 \uC2E4\uD328\uD558\uC600\uC744 \uACBD\uC6B0 \uC704\uC758 \uC774\uBBF8\uC9C0\uC640 \uAC19\uC774 \uB450 \uAD6C\uBB38\uC5D0 \uB300\uD55C \uC2E4\uD328 \uBA54\uC2DC\uC9C0\uB97C \uCD9C\uB825\uD55C\uB2E4.</li></ul><p><img src="'+r+`" alt="Group Assertions Test"></p><ul><li>\uB450 \uAD6C\uBB38 \uC911 \uD558\uB098\uAC00 \uC2E4\uD328\uD558\uC600\uC744 \uACBD\uC6B0 \uC704\uC758 \uC774\uBBF8\uC9C0\uC640 \uAC19\uC774 \uD55C \uAD6C\uBB38\uC5D0 \uB300\uD55C \uC2E4\uD328 \uBA54\uC2DC\uC9C0\uB97C \uCD9C\uB825\uD55C\uB2E4.</li></ul><h3 id="exceptions" tabindex="-1"><a class="header-anchor" href="#exceptions" aria-hidden="true">#</a> Exceptions</h3><ul><li><code>JUnit4</code>\uC5D0\uC11C\uB294 Exception \uD14C\uC2A4\uD2B8\uB97C \uC704\uD574 <code>@Test(expected = &lt;ExceptionClass&gt;)</code> \uC640 \uAC19\uC774 <code>Annotation</code>\uC744 \uD1B5\uD574 \uD655\uC778\uD560 \uC218 \uC788\uC5C8\uC73C\uB098, \uC774\uB7EC\uD55C \uD14C\uC2A4\uD2B8\uB294 Exception \uBC1C\uC0DD \uC9C0\uC810\uC744 \uC815\uD655\uD558\uAC8C \uD30C\uC545\uD558\uAE30 \uD798\uB4E0 \uB2E8\uC810\uC774 \uC788\uB2E4.</li><li><code>JUnit5</code>\uC5D0\uC11C\uB294 <code>assertThrows</code>, <code>assertThatThrownBy</code> \uB4F1\uC758 \uBA54\uC11C\uB4DC\uB97C \uD65C\uC6A9\uD574\uC11C exception \uD14C\uC2A4\uD2B8\uAC00 \uAC00\uB2A5\uD558\uB2E4. <strong>exception\uC774 \uBC1C\uC0DD\uD560 \uC218 \uC788\uB294 \uBD80\uBD84\uC744 \uB78C\uB2E4 \uD45C\uD604\uC2DD\uC73C\uB85C \uAC10\uC2F8\uC11C exception\uC774 \uBC1C\uC0DD\uD558\uB294 \uC9C0\uC810\uC744 \uD2B9\uC815\uD558\uC5EC \uD14C\uC2A4\uD2B8\uAC00 \uAC00\uB2A5\uD558\uB2E4.</strong></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
Calculator\uC758 constructor\uC5D0 argument\uB85C expression\uC744 \uC785\uB825\uBC1B\uB294\uB2E4.
\uC774 \uB54C, \uC815\uC0C1\uC801\uC778 expression\uC774 \uC544\uB2D0 \uACBD\uC6B0 IllegalArgumentException\uC744 throw\uD558\uB3C4\uB85D \uC124\uACC4\uD558\uC600\uB2E4.
*/</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">exceptionAssertions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \uC544\uB798\uC758 \uACBD\uC6B0 IllegalArgumentException\uC774 \uBC1C\uC0DD\uD558\uBA70 NumberFormatException\uC740 \uBC1C\uC0DD\uD558\uC9C0 \uC54A\uB294\uB2E4.</span>
    <span class="token class-name">Exception</span> exception <span class="token operator">=</span> <span class="token function">assertThrows</span><span class="token punctuation">(</span><span class="token class-name">NumberFormatException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token string">&quot;+ + / 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+d+`" alt="Exception Assertions"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
0\uC73C\uB85C \uB098\uB204\uB294 \uACBD\uC6B0\uC5D0\uB3C4 IllegalArgumentException\uC744 throw\uD55C\uB2E4.
*/</span>
<span class="token annotation punctuation">@DisplayName</span><span class="token punctuation">(</span><span class="token string">&quot;0\uC73C\uB85C \uB098\uB204\uC5C8\uC744 \uB54C \uC5D0\uB7EC \uAC80\uC99D&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">errorWhenDivideByZero</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assertThatThrownBy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token string">&quot;2 / 0 + 5 * 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">isInstanceOf</span><span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="timeout" tabindex="-1"><a class="header-anchor" href="#timeout" aria-hidden="true">#</a> timeout</h3><ul><li><code>JUnit4</code>\uC5D0\uC11C\uB294 <code>@Test(timeout=&lt;seconds&gt;</code>\uB97C \uD1B5\uD574 \uD0C0\uC784\uC544\uC6C3\uC744 \uC9C0\uC815\uD55C\uB2E4. \uC704\uC758 exception \uCF00\uC774\uC2A4\uC640 \uB9C8\uCC2C\uAC00\uC9C0\uB85C \uC774\uB7F0 \uACBD\uC6B0 Exception \uBC1C\uC0DD \uC9C0\uC810\uC744 \uC815\uD655\uD558\uAC8C \uD30C\uC545\uD558\uAE30 \uD798\uB4E0 \uB2E8\uC810\uC774 \uC788\uB2E4.</li><li><code>JUnit5</code>\uC5D0\uC11C <code>assertTimeout</code> \uBA54\uC11C\uB4DC\uB97C \uD65C\uC6A9\uD574 \uBB38\uC81C\uB97C \uD574\uACB0\uD560 \uC218 \uC788\uB2E4. \uD574\uB2F9 \uBA54\uC11C\uB4DC\uB294 \uBC18\uD658\uAC12\uC744 \uAC00\uC838 \uCD94\uD6C4 \uD65C\uC6A9\uC774 \uAC00\uB2A5\uD558\uB2E4.</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
ofMinutes(Duration timeout)\uC5D0\uC11C \uC815\uC758\uD55C \uC2DC\uAC04 \uB0B4\uC5D0 \uC2E4\uD589\uC774 \uC644\uB8CC\uB418\uC9C0 \uC54A\uC73C\uBA74 \uD14C\uC2A4\uD2B8\uB97C \uC2E4\uD328\uC2DC\uD0A8\uB2E4.*/</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">timeoutNotExceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// The following assertion succeeds.</span>
    <span class="token function">assertTimeout</span><span class="token punctuation">(</span><span class="token function">ofMinutes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// Perform task that takes less than 2 minutes.</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">timeoutNotExceededWithResultMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// The following assertion succeeds, and returns the supplied object.</span>
    <span class="token class-name">String</span> actualResult <span class="token operator">=</span> <span class="token function">assertTimeout</span><span class="token punctuation">(</span><span class="token function">ofMinutes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Result Message&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token string">&quot;Result Message&quot;</span><span class="token punctuation">,</span> actualResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="assumptions" tabindex="-1"><a class="header-anchor" href="#assumptions" aria-hidden="true">#</a> Assumptions</h2><blockquote><p>\uAC00\uC815\uBB38, <strong>\uD2B9\uC815 \uC870\uAC74\uC5D0\uC11C\uB9CC \uD14C\uC2A4\uD2B8\uB97C \uC2E4\uD589\uD558\uACE0\uC790 \uD560 \uB54C, \uB610\uD55C \uBC18\uB300\uB85C \uD2B9\uC815 \uC0C1\uD669\uC5D0\uC11C\uB9CC \uC2E4\uD589\uD558\uC9C0 \uC54A\uACE0\uC790 \uD560 \uB54C \uC0AC\uC6A9</strong></p></blockquote><p><code>org.junit.jupiter.api.Assumptions</code></p><h3 id="basics" tabindex="-1"><a class="header-anchor" href="#basics" aria-hidden="true">#</a> Basics</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> environment <span class="token operator">=</span> <span class="token string">&quot;local&quot;</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">testOnLocal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assumeTrue</span><span class="token punctuation">(</span><span class="token string">&quot;local&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;Aborting test: not on developer workstation&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token string">&quot;2 + 3 * 4 / 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\uC704\uC758 \uCF54\uB4DC\uB294 \uC2E4\uD589 \uD658\uACBD\uC774 <code>local</code>\uC778 \uACBD\uC6B0\uC5D0\uB9CC <code>assumeTrue</code>\uC5D0\uC11C <code>true</code>\uB85C \uC778\uC9C0\uD558\uC5EC \uC544\uB798 <code>assertThat</code> \uAD6C\uBB38\uC744 \uC2E4\uD589\uD558\uBA70, <code>assumeTrue</code>\uAC00 \uD1B5\uACFC\uB418\uC9C0 \uC54A\uC73C\uBA74 <strong>\uD574\uB2F9 \uD14C\uC2A4\uD2B8 \uBA54\uC11C\uB4DC\uB294 \uC2E4\uD328\uAC00 \uC544\uB2CC <code>ignored</code> \uCC98\uB9AC\uB41C\uB2E4. (<code>@Disabled</code>)</strong></li></ul><h3 id="applications" tabindex="-1"><a class="header-anchor" href="#applications" aria-hidden="true">#</a> Applications</h3><ul><li><code>assumingThat</code> \uAD6C\uBB38\uC744 \uC0AC\uC6A9\uD558\uBA74 \uBCF4\uB2E4 \uBCF5\uC7A1\uD55C assumptions \uAD6C\uD604\uC774 \uAC00\uB2A5\uD558\uB2E4.</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> environment <span class="token operator">=</span> <span class="token string">&quot;development&quot;</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">void</span> <span class="token function">testInAllEnvironments</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">assumingThat</span><span class="token punctuation">(</span><span class="token string">&quot;development&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>environment<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;In development mode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token string">&quot;4 / 2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Etc Environment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">assertEquals</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Calculator</span><span class="token punctuation">(</span><span class="token string">&quot;6 * 5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>assumingThat</code>\uC758 <strong>\uCCAB\uBC88\uC9F8 \uC778\uC790\uAC00 true\uC778 \uACBD\uC6B0, \uB2E4\uC74C \uD568\uC218\uD615 \uD30C\uB77C\uBBF8\uD130\uAC00 \uC2E4\uD589</strong>\uB41C\uB2E4.</li></ul><h2 id="references" tabindex="-1"><a class="header-anchor" href="#references" aria-hidden="true">#</a> References</h2>`,37),m={href:"https://stackoverflow.com/questions/44628483/assume-vs-assert-in-junit-tests",target:"_blank",rel:"noopener noreferrer"},b=i("StackOverflow");function g(h,f){const s=t("ExternalLinkIcon");return e(),o("div",null,[v,n("ul",null,[n("li",null,[n("a",m,[b,p(s)])])])])}var x=a(k,[["render",g],["__file","JUnit-Assertions-and-Assumptions.html.vue"]]);export{x as default};
