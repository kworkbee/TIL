import{_ as n,o as s,c as a,a as e}from"./app.afe75d95.js";const p={},t=e(`<h1 id="equals-and-hashcode" tabindex="-1"><a class="header-anchor" href="#equals-and-hashcode" aria-hidden="true">#</a> <code>equals</code> And <code>hashCode</code></h1><hr><h2 id="equals" tabindex="-1"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> <code>equals</code></h2><ul><li>\uB808\uD37C\uB7F0\uC2A4\uC758 \uB3D9\uC77C \uC5EC\uBD80 \uD655\uC778 (\uB3D9\uC77C\uC131 \uBE44\uAD50)</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">==</span> obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\uC624\uC9C1 \uC790\uAE30 \uC790\uC2E0\uACFC\uB9CC \uAC19\uB2E4\uACE0 \uC778\uC2DD</li></ul><h3 id="\u110C\u1162\u110C\u1165\u11BC\u110B\u1174" tabindex="-1"><a class="header-anchor" href="#\u110C\u1162\u110C\u1165\u11BC\u110B\u1174" aria-hidden="true">#</a> \uC7AC\uC815\uC758</h3><ul><li>\uB17C\uB9AC\uC801 \uB3D9\uCE58\uC131 \uBE44\uAD50\uAC00 \uD544\uC694\uD55C \uACBD\uC6B0</li></ul><h3 id="\u110C\u1162\u110C\u1165\u11BC\u110B\u1174-\u1107\u116E\u11AF\u1111\u1175\u11AF\u110B\u116D" tabindex="-1"><a class="header-anchor" href="#\u110C\u1162\u110C\u1165\u11BC\u110B\u1174-\u1107\u116E\u11AF\u1111\u1175\u11AF\u110B\u116D" aria-hidden="true">#</a> \uC7AC\uC815\uC758 \uBD88\uD544\uC694</h3><ul><li>\uC778\uC2A4\uD134\uC2A4\uAC00 \uB458 \uC774\uC0C1 \uB9CC\uB4E4\uC5B4\uC9C0\uC9C0 \uC54A\uC74C\uC744 \uBCF4\uC7A5\uD558\uB294 \uD074\uB798\uC2A4 (e.g. enum)</li></ul><h3 id="\u1106\u1166\u1109\u1165\u1103\u1173-\u1100\u1172\u110B\u1163\u11A8" tabindex="-1"><a class="header-anchor" href="#\u1106\u1166\u1109\u1165\u1103\u1173-\u1100\u1172\u110B\u1163\u11A8" aria-hidden="true">#</a> \uBA54\uC11C\uB4DC \uADDC\uC57D</h3><ul><li>\uBC18\uC0AC\uC131</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> # <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>\uB300\uCE6D\uC131</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code># <span class="token keyword">if</span>
x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
# is <span class="token boolean">true</span> then
y<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> # is <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\uCD94\uC774\uC131</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code># <span class="token keyword">if</span>
x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
# is <span class="token boolean">true</span> and
y<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span>
# is <span class="token boolean">true</span> then
x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span> # is <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\uC77C\uAD00\uC131</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code># repeated
x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span> # calls are the same
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>not null</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>x<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> # <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>::: info</p><h4 id="liskov-\u110E\u1175\u1112\u116A\u11AB-\u110B\u116F\u11AB\u110E\u1175\u11A8" tabindex="-1"><a class="header-anchor" href="#liskov-\u110E\u1175\u1112\u116A\u11AB-\u110B\u116F\u11AB\u110E\u1175\u11A8" aria-hidden="true">#</a> Liskov \uCE58\uD658 \uC6D0\uCE59</h4><ul><li>\uC5B4\uB5A4 \uD0C0\uC785\uC5D0 \uC788\uC5B4 \uC911\uC694\uD55C \uC18D\uC131\uC774\uBA74 \uADF8 \uD558\uC704 \uD0C0\uC785\uC5D0\uC11C\uB3C4 \uC911\uC694</li><li>\uADF8 \uD0C0\uC785\uC758 \uBAA8\uB4E0 \uBA54\uC11C\uB4DC\uAC00 \uD558\uC704 \uD0C0\uC785\uC5D0\uB3C4 \uB611\uAC19\uC774 \uC798 \uC791\uB3D9\uD574\uC57C :::</li></ul><h3 id="equals-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u11AF-\u1104\u1162-key-point" tabindex="-1"><a class="header-anchor" href="#equals-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u11AF-\u1104\u1162-key-point" aria-hidden="true">#</a> equals \uC7AC\uC815\uC758\uD560 \uB54C Key Point</h3><ul><li><strong><code>hashCode</code> \uBA54\uC11C\uB4DC\uB3C4 \uBC18\uB4DC\uC2DC \uC7AC\uC815\uC758</strong></li><li><code>instanceof</code> operator\uB85C \uC62C\uBC14\uB978 \uD0C0\uC785\uC778\uC9C0 \uD655\uC778</li><li><code>==</code> operator\uB85C \uC790\uAE30 \uC790\uC2E0\uC758 \uCC38\uC870\uC778\uC9C0 \uD655\uC778</li><li>\uC785\uB825 \uAC1D\uCCB4\uC758 \uD0C0\uC785 \uD615\uBCC0\uD658\uC774 \uC720\uD6A8\uD55C\uC9C0 \uD655\uC778</li><li>\uC785\uB825 \uAC1D\uCCB4\uC640 \uC790\uAE30 \uC790\uC2E0\uC758 \uB300\uC751\uB418\uB294 \uD575\uC2EC \uD544\uB4DC\uAC00 \uBAA8\uB450 \uC77C\uCE58\uD558\uB294\uC9C0 \uD655\uC778</li></ul><h2 id="hashcode" tabindex="-1"><a class="header-anchor" href="#hashcode" aria-hidden="true">#</a> <code>hashCode</code></h2><ul><li>\uAC1D\uCCB4\uB97C \uC2DD\uBCC4\uD558\uB294 \uD558\uB098\uC758 \uAC12</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code># <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Arrays</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    
    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Object</span> element <span class="token operator">:</span> a<span class="token punctuation">)</span>
        result <span class="token operator">=</span> <span class="token number">31</span> <span class="token operator">*</span> result <span class="token operator">+</span> <span class="token punctuation">(</span>element <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> element<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

# <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
<span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> hash<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>hashIsZero<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        h <span class="token operator">=</span> <span class="token function">isLatin1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">StringLatin1</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
                       <span class="token operator">:</span> <span class="token class-name">StringUTF16</span><span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>h <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            hashIsZero <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            hash <span class="token operator">=</span> h<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> h<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u1106\u1166\u1109\u1165\u1103\u1173-\u1100\u1172\u110B\u1161\u11A8" tabindex="-1"><a class="header-anchor" href="#\u1106\u1166\u1109\u1165\u1103\u1173-\u1100\u1172\u110B\u1161\u11A8" aria-hidden="true">#</a> \uBA54\uC11C\uB4DC \uADDC\uC545</h3><ul><li><code>equals</code> \uBE44\uAD50\uC5D0 \uC0AC\uC6A9\uB418\uB294 \uC815\uBCF4\uC758 \uBCC0\uACBD\uC774 \uC5C6\uB2E4\uBA74 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC774 \uC2E4\uD589\uB418\uB294 \uB3D9\uC548 <code>hashCode</code>\uB294 \uBC18\uBCF5 \uD638\uCD9C\uD574\uB3C4 \uD56D\uC0C1 \uB3D9\uC77C \uAC12\uC774 \uBC18\uD658\uB41C\uB2E4.</li><li><code>equals</code> \uBE44\uAD50 \uACB0\uACFC\uB85C \uB450 \uAC1D\uCCB4\uAC00 \uB2E4\uB974\uB2E4\uB294 \uACB0\uACFC\uAC00 \uB098\uC640\uB3C4 <code>hashCode</code>\uAC00 \uB3D9\uC77C\uD560 \uC218 \uC788\uB2E4. (Collision)</li><li><code>equals</code> \uBE44\uAD50 \uACB0\uACFC\uB85C \uB450 \uAC1D\uCCB4\uAC00 \uAC19\uB2E4\uB294 \uACB0\uACFC\uAC00 \uB098\uC624\uBA74 <code>hashCode</code> \uAC12\uC740 \uD56D\uC0C1 \uB3D9\uC77C\uD558\uB2E4.</li></ul><div class="custom-container warning"><p class="custom-container-title">WARNING</p><h4 id="equals-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u11AF-\u1104\u1162-hashcode\u1105\u1173\u11AF-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u110C\u1175-\u110B\u1161\u11AD\u110B\u1173\u1106\u1167\u11AB" tabindex="-1"><a class="header-anchor" href="#equals-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u11AF-\u1104\u1162-hashcode\u1105\u1173\u11AF-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u110C\u1175-\u110B\u1161\u11AD\u110B\u1173\u1106\u1167\u11AB" aria-hidden="true">#</a> equals \uC7AC\uC815\uC758\uD560 \uB54C hashCode\uB97C \uC7AC\uC815\uC758\uD558\uC9C0 \uC54A\uC73C\uBA74?</h4><ul><li>\uAC19\uC740 \uAC12\uC744 \uAC00\uC9C4 \uAC1D\uCCB4\uAC00 \uC11C\uB85C \uB2E4\uB978 \uD574\uC2DC\uAC12\uC744 \uAC00\uC9C0\uAC8C \uB41C\uB2E4.</li></ul></div><h3 id="_31" tabindex="-1"><a class="header-anchor" href="#_31" aria-hidden="true">#</a> 31?</h3><ul><li>\uC18C\uC218\uC774\uBA74\uC11C \uD640\uC218</li><li>\uB9CC\uC57D \uACF1\uD558\uB294 \uAC12\uC774 \uC9DD\uC218\uB77C\uBA74 \uADF8 \uACB0\uACFC\uAC00 Overflow\uB418\uBA74\uC11C \uC815\uBCF4 \uC77C\uBD80\uAC00 \uC0AC\uB77C\uC9C0\uB294 \uACB0\uACFC\uAC00 \uBC1C\uC0DD\uD560 \uC218 \uC788\uB2E4. <ul><li>Bit Shift\uC640 \uB3D9\uC77C\uD558\uAE30 \uB54C\uBB38</li><li><code>31 * i = (i &lt;&lt; 5) - i</code></li></ul></li><li>See https://stackoverflow.com/questions/299304/why-does-javas-hashcode-in-string-use-31-as-a-multiplier</li></ul><h3 id="hashtable" tabindex="-1"><a class="header-anchor" href="#hashtable" aria-hidden="true">#</a> HashTable</h3><ul><li>Key - Value pair\uB85C \uB370\uC774\uD130\uB97C \uC800\uC7A5\uD558\uBA70, \uC774 \uB54C hash function\uC744 \uC0AC\uC6A9\uD574 key\uB97C \uAE30\uC900\uC73C\uB85C \uACE0\uC720\uD55C \uC2DD\uBCC4\uAC12 (\uD574\uC2DC)\uB97C \uB9CC\uB4E0\uB2E4. \uC774 \uD574\uC2DC \uAC12\uC744 \uBC84\uD0B7\uC5D0 \uC800;\uC7A5\uD55C\uB2E4.</li><li>\uD14C\uC774\uBE14 \uD06C\uAE30\uAC00 \uD55C\uC815\uC801\uC774\uBBC0\uB85C \uC11C\uB85C \uB2E4\uB978 \uAC1D\uCCB4\uB77C\uB3C4 \uB3D9\uC77C \uD574\uC2DC\uAC12\uC744 \uAC00\uC9C8 \uC218 \uC788\uB2E4. (Hash Collision) \uC774 \uACBD\uC6B0 \uBC84\uD0B7\uC5D0 LinkedList \uD615\uD0DC\uB85C \uAC1D\uCCB4\uB97C \uCD94\uAC00\uD55C\uB2E4.</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code># <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>HashTable</span>
<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token keyword">int</span> <span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> loadFactor <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> h<span class="token punctuation">;</span>

    loadFactor <span class="token operator">=</span> <span class="token operator">-</span>loadFactor<span class="token punctuation">;</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> tab <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> tab<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>entry <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            h <span class="token operator">+=</span> entry<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            entry <span class="token operator">=</span> entry<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    loadFactor <span class="token operator">=</span> <span class="token operator">-</span>loadFactor<span class="token punctuation">;</span>

    <span class="token keyword">return</span> h<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token class-name">V</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">Object</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> tab<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>hash <span class="token operator">&amp;</span> <span class="token number">0x7FFFFFFF</span><span class="token punctuation">)</span> <span class="token operator">%</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> e <span class="token operator">=</span> tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token punctuation">;</span> e <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span> e <span class="token operator">=</span> e<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> e<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span>e<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">synchronized</span> <span class="token class-name">V</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">K</span> key<span class="token punctuation">,</span> <span class="token class-name">V</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// Make sure the value is not null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// Makes sure the key is not already in the hashtable.</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">,</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> tab<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> table<span class="token punctuation">;</span>
    <span class="token keyword">int</span> hash <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>hash <span class="token operator">&amp;</span> <span class="token number">0x7FFFFFFF</span><span class="token punctuation">)</span> <span class="token operator">%</span> tab<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
    <span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span><span class="token class-name">V</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span>tab<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token punctuation">;</span> entry <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token punctuation">;</span> entry <span class="token operator">=</span> entry<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span>hash <span class="token operator">==</span> hash<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> entry<span class="token punctuation">.</span>key<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">V</span> old <span class="token operator">=</span> entry<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
            entry<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>
            <span class="token keyword">return</span> old<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">addEntry</span><span class="token punctuation">(</span>hash<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><h4 id="equals-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u11AF-\u1104\u1162-hashcode\u1105\u1173\u11AF-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u110C\u1175-\u110B\u1161\u11AD\u110B\u1173\u1106\u1167\u11AB-2" tabindex="-1"><a class="header-anchor" href="#equals-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u11AF-\u1104\u1162-hashcode\u1105\u1173\u11AF-\u110C\u1162\u110C\u1165\u11BC\u110B\u1174\u1112\u1161\u110C\u1175-\u110B\u1161\u11AD\u110B\u1173\u1106\u1167\u11AB-2" aria-hidden="true">#</a> equals \uC7AC\uC815\uC758\uD560 \uB54C hashCode\uB97C \uC7AC\uC815\uC758\uD558\uC9C0 \uC54A\uC73C\uBA74? - 2</h4><ul><li><code>hashCode</code>\uB97C \uC7AC\uC815\uC758\uD558\uC9C0 \uC54A\uC73C\uBA74 \uAC19\uC740 VO\uB77C\uB3C4 hash \uAC12\uC774 \uB2E4\uB974\uAC8C \uB3C4\uCD9C\uB420 \uC218 \uC788\uC73C\uBBC0\uB85C HashTable\uC5D0\uC11C \uD574\uB2F9 \uAC1D\uCCB4\uAC00 \uC800\uC7A5\uB41C \uBC84\uD0B7\uC744 \uCC3E\uC744 \uC218 \uC5C6\uB2E4.</li><li>\uBC18\uB300\uB85C <code>equals</code>\uB97C \uC7AC\uC815\uC758\uD558\uC9C0 \uC54A\uC73C\uBA74 <code>hashCode</code>\uB85C \uAC1D\uCCB4\uAC00 \uC800\uC7A5\uB41C \uBC84\uD0B7\uC744 \uCC3E\uC744 \uC218 \uC788\uC9C0\uB9CC \uB17C\uB9AC\uC801 \uB3D9\uCE58\uC131 \uBE44\uAD50\uAC00 \uC548\uB418\uAE30 \uB54C\uBB38\uC5D0 null\uC774 \uB9AC\uD134\uB41C\uB2E4.</li></ul></div>`,38),o=[t];function c(l,i){return s(),a("div",null,o)}var r=n(p,[["render",c],["__file","equals-hashcode.html.vue"]]);export{r as default};
