import{_ as n,o as s,c as a,a as t}from"./app.afe75d95.js";var p="/TIL/assets/image.8cc3c02b.png";const e={},o=t('<h1 id="\u1106\u1165\u11AF\u1110\u1175-\u1109\u1173\u1105\u1166\u1103\u1173-\u1112\u116A\u11AB\u1100\u1167\u11BC\u110B\u1166\u1109\u1165\u110B\u1174-\u1103\u1169\u11BC\u1109\u1175\u1109\u1165\u11BC-\u1107\u1169\u110C\u1161\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1106\u1165\u11AF\u1110\u1175-\u1109\u1173\u1105\u1166\u1103\u1173-\u1112\u116A\u11AB\u1100\u1167\u11BC\u110B\u1166\u1109\u1165\u110B\u1174-\u1103\u1169\u11BC\u1109\u1175\u1109\u1165\u11BC-\u1107\u1169\u110C\u1161\u11BC" aria-hidden="true">#</a> \uBA40\uD2F0 \uC2A4\uB808\uB4DC \uD658\uACBD\uC5D0\uC11C\uC758 \uB3D9\uC2DC\uC131 \uBCF4\uC7A5</h1><p>\uC790\uBC14 \uBA54\uBAA8\uB9AC \uAD6C\uC870\uB294 CPU - RAM \uC544\uD0A4\uD14D\uCC98 \uAE30\uBC18\uC73C\uB85C \uB2E4\uC74C\uACFC \uAC19\uC774 \uB3D9\uC791\uD569\uB2C8\uB2E4.</p><p><img src="'+p+`" alt="CPU-RAM"></p><ul><li>CPU\uAC00 \uC791\uC5C5 \uCC98\uB9AC\uB97C \uC704\uD574 \uD544\uC694\uD55C \uB370\uC774\uD130\uB97C RAM\uC5D0\uC11C \uC77D\uC5B4 CPU Cache\uC5D0 \uBCF5\uC81C</li><li>\uC791\uC5C5 \uCC98\uB9AC \uD6C4 \uBCC0\uACBD\uB41C CPU Cache \uB370\uC774\uD130\uB97C RAM\uC5D0 overwrite</li></ul><p>CPU\uAC00 \uC5EC\uB7EC \uAC1C\uC778 \uACBD\uC6B0 CPU\uBCC4\uB85C Cache\uC5D0 \uC800\uC7A5\uB41C \uB370\uC774\uD130\uAC00 \uB2EC\uB77C \uBB38\uC81C\uAC00 \uBC1C\uC0DD\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.</p><h2 id="\u1100\u1161\u1109\u1175\u1109\u1165\u11BC" tabindex="-1"><a class="header-anchor" href="#\u1100\u1161\u1109\u1175\u1109\u1165\u11BC" aria-hidden="true">#</a> \uAC00\uC2DC\uC131</h2><ul><li>\uD558\uB098\uC758 \uC2A4\uB808\uB4DC\uC5D0\uC11C \uACF5\uC720 \uC790\uC6D0 (\uBCC0\uC218 / \uAC1D\uCCB4 \uB4F1)\uC744 \uC218\uC815\uD55C \uACB0\uACFC\uAC00 \uB2E4\uB978 \uC2A4\uB808\uB4DC\uC5D0\uAC8C \uBCF4\uC774\uC9C0 \uC54A\uC744 \uACBD\uC6B0 \uBC1C\uC0DD</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> stopRequested<span class="token punctuation">;</span> 

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span> background <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">!</span>stopRequested <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Ended Background Thread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        background<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// (A)</span>

        <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        stopRequested <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// (B)</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Ended Main Thread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uBC31\uADF8\uB77C\uC6B4\uB4DC \uC2A4\uB808\uB4DC\uB294 \uBA54\uC778 \uC2A4\uB808\uB4DC\uC640 \uB2E4\uB978 CPU \uCE90\uC2DC\uC5D0 stopRequested \uB9AC\uC18C\uC2A4\uB97C \uBCF5\uC81C\uD558\uACE0, \uC774\uD6C4 \uBCF5\uC81C\uD55C \uAC12\uC744 \uC0AC\uC6A9\uD574 \uC870\uAC74\uC2DD\uC744 \uBC18\uBCF5\uD574\uC11C \uC2E4\uD589\uD569\uB2C8\uB2E4. 1\uCD08 \uC774\uD6C4 \uBA54\uC778 \uC2A4\uB808\uB4DC\uC5D0\uC11C boolean \uAC12\uC744 \uBCC0\uACBD\uD558\uC9C0\uB9CC \uB2E4\uB978 CPU \uCE90\uC2DC\uB97C \uCC38\uC870\uD558\uBBC0\uB85C \uBA54\uC778 \uC2A4\uB808\uB4DC\uC5D0\uC11C \uC77C\uC5B4\uB09C \uBCC0\uACBD\uC744 \uC54C\uC544\uCC44\uC9C0 \uBABB\uD569\uB2C8\uB2E4. \uB530\uB77C\uC11C \uBA54\uC778 \uC2A4\uB808\uB4DC\uB294 \uC885\uB8CC\uB418\uC5B4\uB3C4 \uBC31\uADF8\uB77C\uC6B4\uB4DC \uC2A4\uB808\uB4DC\uB294 alive \uD569\uB2C8\uB2E4.</p><h2 id="\u1103\u1169\u11BC\u1109\u1175-\u110C\u1165\u11B8\u1100\u1173\u11AB" tabindex="-1"><a class="header-anchor" href="#\u1103\u1169\u11BC\u1109\u1175-\u110C\u1165\u11B8\u1100\u1173\u11AB" aria-hidden="true">#</a> \uB3D9\uC2DC \uC811\uADFC</h2><ul><li>\uC5EC\uB7EC \uC2A4\uB808\uB4DC\uC5D0\uC11C \uACF5\uC720 \uC790\uC6D0\uC744 \uB3D9\uC2DC\uC5D0 \uC811\uADFC\uD588\uC744 \uB54C \uC5F0\uC0B0\uC774 \uAC00\uC7A5 \uB2A6\uAC8C \uB05D\uB09C \uACB0\uACFC\uAC12\uC73C\uB85C overwrite\uB418\uB294 \uBB38\uC81C</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> t<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\uCF54\uB4DC \uC0C1\uC73C\uB85C \uBCF4\uC558\uC744 \uB54C 1 ~ 100 * 1000\uB9CC\uD07C \uC21C\uCC28\uC801\uC73C\uB85C \uCD9C\uB825\uD560 \uAC83\uCC98\uB7FC \uBCF4\uC5EC\uC9C0\uC9C0\uB9CC, \uC5EC\uB7EC \uC2A4\uB808\uB4DC\uC5D0\uC11C \uACF5\uC720\uC790\uC6D0\uC5D0 \uC811\uADFC\uD574 \uAC12\uC744 \uBC14\uAFB8\uBBC0\uB85C \uC21C\uC11C \uBCF4\uC7A5\uC774 \uB418\uC9C0 \uC54A\uC544 \uC758\uB3C4\uC640 \uB2E4\uB978 \uACB0\uACFC\uAC00 \uCD9C\uB825\uB429\uB2C8\uB2E4.</p><h2 id="\u1103\u1169\u11BC\u1109\u1175\u1109\u1165\u11BC-\u1107\u1169\u110C\u1161\u11BC-\u1107\u1161\u11BC\u1107\u1165\u11B8" tabindex="-1"><a class="header-anchor" href="#\u1103\u1169\u11BC\u1109\u1175\u1109\u1165\u11BC-\u1107\u1169\u110C\u1161\u11BC-\u1107\u1161\u11BC\u1107\u1165\u11B8" aria-hidden="true">#</a> \uB3D9\uC2DC\uC131 \uBCF4\uC7A5 \uBC29\uBC95</h2><ul><li><code>volatile</code> keyword <ul><li>\uAC00\uC2DC\uC131 \uBB38\uC81C\uB294 \uD574\uACB0\uB418\uC9C0\uB9CC, \uB3D9\uC2DC \uC811\uADFC \uBB38\uC81C\uB294 \uC5EC\uC804\uD788 \uC874\uC7AC\uD569\uB2C8\uB2E4.</li><li>\uD574\uB2F9 \uD0A4\uC6CC\uB4DC\uAC00 \uBD99\uC740 \uB9AC\uC18C\uC2A4\uB294 Read\uC640 Write\uB97C CPU Cache\uAC00 \uC544\uB2CC \uBA54\uC778 \uBA54\uBAA8\uB9AC\uC5D0\uC11C \uB3D9\uC791, \uC989 \uC790\uC6D0\uC744 \uC800\uC7A5\uD558\uB294 \uBA54\uBAA8\uB9AC\uAC00 \uD558\uB098\uAC00 \uB418\uAE30 \uB54C\uBB38\uC5D0 \uAC19\uC740 \uACF5\uC720 \uC790\uC6D0\uC5D0 \uB300\uD574 \uBA54\uBAA8\uB9AC\uBCC4\uB85C \uB2E4\uB978 \uAC12\uC744 \uAC00\uC9C0\uB294 \uACBD\uC6B0\uB294 \uC5C6\uC2B5\uB2C8\uB2E4.</li><li>\uC5EC\uB7EC \uC2A4\uB808\uB4DC\uC5D0\uC11C \uBA54\uC778 \uBA54\uBAA8\uB9AC\uC758 \uACF5\uC720 \uC790\uC6D0\uC5D0 \uB3D9\uC2DC \uC811\uADFC \uAC00\uB2A5\uD558\uAE30 \uB54C\uBB38\uC5D0 \uC5EC\uB7EC \uC2A4\uB808\uB4DC\uC5D0\uC11C \uAC12\uC744 \uC218\uC815\uD558\uB824\uACE0 \uC2DC\uB3C4\uD558\uBA74 \uAC12\uC774 overwrite \uB420 \uC218 \uC788\uC5B4 \uB3D9\uC2DC \uC811\uADFC \uBB38\uC81C \uD574\uACB0\uC774 \uBD88\uAC00\uD569\uB2C8\uB2E4.</li></ul></li><li><code>synchronized</code> keyword <ul><li>\uC548\uC804\uD558\uAC8C \uB3D9\uC2DC\uC131 \uBCF4\uC7A5\uC774 \uAC00\uB2A5\uD558\uC9C0\uB9CC \uAC00\uC7A5 \uBE44\uC6A9\uC774 \uBE44\uC309\uB2C8\uB2E4.</li></ul></li><li><code>AtomicReference&lt;V&gt;</code> class <ul><li>compare-and-swap \uC54C\uACE0\uB9AC\uC998\uC744 \uC0AC\uC6A9\uD558\uC5EC \uAC00\uC7A5 \uC800\uB834\uD55C \uBE44\uC6A9\uC73C\uB85C \uB3D9\uC2DC\uC131\uC744 \uBCF4\uC7A5\uD569\uB2C8\uB2E4.</li><li>\uD604\uC7AC \uC2A4\uB808\uB4DC\uAC00 \uC874\uC7AC\uD558\uB294 CPU \uCE90\uC2DC\uC640 \uBA54\uC778 \uBA54\uBAA8\uB9AC \uC800\uC7A5 \uAC12\uC744 \uBE44\uAD50\uD574 \uC77C\uCE58\uD558\uB294 \uACBD\uC6B0 \uC0C8\uB85C\uC6B4 \uAC12\uC73C\uB85C \uAD50\uCCB4\uD558\uACE0, \uADF8\uB807\uC9C0 \uC54A\uC744 \uACBD\uC6B0 \uAE30\uC874 \uAD50\uCCB4\uAC00 \uC2E4\uD328\uB418\uC5B4 Retry\uD558\uB294 \uBC29\uC2DD\uC785\uB2C8\uB2E4.</li><li>CPU\uAC00 \uBA54\uC778 \uBA54\uBAA8\uB9AC \uB9AC\uC18C\uC2A4\uB97C CPU \uCE90\uC2DC\uB85C \uAC00\uC838\uC640 \uC5F0\uC0B0\uC744 \uC218\uD589\uD558\uB294 \uB3D9\uC548 \uB2E4\uB978 \uC2A4\uB808\uB4DC\uC5D0\uC11C \uC5F0\uC0B0\uC774 \uC218\uD589\uB3FC, \uBA54\uC778 \uBA54\uBAA8\uB9AC \uC790\uC6D0 \uAC12\uC774 \uBCC0\uACBD\uB420 \uACBD\uC6B0 \uAE30\uC874 \uC5F0\uC0B0\uC744 \uC2E4\uD328 \uCC98\uB9AC\uD558\uACE0, \uC0C8\uB85C \uBC14\uB010 \uBA54\uC778 \uBA54\uBAA8\uB9AC \uAC12\uC73C\uB85C \uC7AC\uC218\uD589\uD569\uB2C8\uB2E4.</li></ul></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> atomic <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;atomic : &quot;</span> <span class="token operator">+</span> atomic<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>									<span class="token comment">// null</span>

<span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> atomic2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;atomic2 : &quot;</span> <span class="token operator">+</span> atomic2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>								<span class="token comment">// 100</span>

<span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> atomic3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value before setting : &quot;</span> <span class="token operator">+</span> atomic3<span class="token punctuation">.</span><span class="token function">getAndSet</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// 10</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value after setting : &quot;</span> <span class="token operator">+</span> atomic3<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>						<span class="token comment">// 20</span>

<span class="token keyword">int</span> expected <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>
<span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> atomic4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Success ? &quot;</span> <span class="token operator">+</span> atomic4<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>expected<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// false</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value : &quot;</span> <span class="token operator">+</span> atmoic4<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>														<span class="token comment">// 10</span>

atomic4<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Success ? &quot;</span> <span class="token operator">+</span> atomic4<span class="token punctuation">.</span><span class="token function">compareAndSet</span><span class="token punctuation">(</span>expected<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>	<span class="token comment">// true</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value : &quot;</span> <span class="token operator">+</span> atmoic4<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>														<span class="token comment">// 100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),c=[o];function l(u,i){return s(),a("div",null,c)}var r=n(e,[["render",l],["__file","guaranteeing-concurrency-in-multi-threaded-environment.html.vue"]]);export{r as default};
